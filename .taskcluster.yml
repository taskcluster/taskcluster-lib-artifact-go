# The version is always required
version: 0
# Top level metadata is always required
metadata:
  name: "taskcluster-lib-artifact-go CI"
  description: "The unit tests of taskcluster-lib-artifact-go tested on a subset of platforms"
  owner: "{{ event.head.user.email }}" # the user who sent the pr/push e-mail will be inserted here
  source: "{{ event.head.repo.url }}"  # the repo where the pr came from will be inserted here
tasks:


  ##########################################################
  ############## Windows Server 2012 R2 Build ##############
  ##########################################################

  - provisionerId: "{{ taskcluster.docker.provisionerId }}"
    workerType: win2012r2
    metadata:
      name: "Build/test 64 bit taskcluster-lib-artifact-go on Windows Server 2012 R2"
      description: "This builds and tests the 64 bit Windows version of taskcluster-lib-artifact-go on Windows Server 2012 R2"
      owner: "{{ event.head.user.email }}" # the user who sent the pr/push e-mail will be inserted here
      source: "{{ event.head.repo.url }}"  # the repo where the pr came from will be inserted here
    extra:
      github:
        # Events that will trigger this task
        events:
          - pull_request.synchronize
          - push
    scopes:
      - secrets:get:repo:github.com/taskcluster/taskcluster-lib-artifact-go
      - generic-worker:cache:taskcluster-lib-artifact-go-checkout
    payload:
      features:
        taskclusterProxy: true
      maxRunTime: 3600
      command:
        - set CGO_ENABLED=0
        - set GOPATH=%CD%\gopath1.10.1
        - set GOROOT=%CD%\go1.10.1\go
        - set PATH=%CD%\git\cmd;%GOPATH%\bin;%GOROOT%\bin;%PATH%
        - git config --global core.autocrlf false
        - go version
        - go env
        # extract .bat file from secret repo:github.com/taskcluster/taskcluster-lib-artifact-go
        - 'type secrets | jq -r .secret.bat > env.bat' 
        - env.bat
        - 'if not exist "%GOPATH%\src\github.com\taskcluster" mkdir "%GOPATH%\src\github.com\taskcluster"'
        - 'cd "%GOPATH%\src\github.com\taskcluster"'
        - 'if not exist taskcluster-lib-artifact-go git clone {{ event.head.repo.url }} taskcluster-lib-artifact-go'
        - 'cd taskcluster-lib-artifact-go'
        - 'git fetch "{{ event.head.repo.url }}" "+{{ event.head.ref }}:refs/heads/%TASK_ID%"'
        - 'git checkout -f "%TASK_ID%"'
        - 'git reset --hard "{{ event.head.sha }}"'
        - 'git clean -fdx'
        - 'git checkout -B tmp -t "%TASK_ID%"'
        - go get -v -u github.com/gordonklaus/ineffassign
        - go get -v -u -t ./...
        - set CGO_ENABLED=1
        - set GORACE=history_size=7
        - go test -v -race ./...
        - ineffassign .
        - |
          :: This counts the number of lines returned by git status to make sure we have not
          :: missed anything important in the .gitignore file.
          git status
          :: Dump temp file a directory higher, otherwise git status reports the tmp1.txt file!
          git status --porcelain | C:\Windows\System32\find.exe /v /c "" > ..\tmp1.txt
          set /P lines=<..\tmp1.txt
          :: This checks that if more than 0 lines are returned, we fail.
          if %lines% gtr 0 exit /b 64
          :: find.exe will have exited with exit code 1, so need to explicitly exit with 0.
          exit /b 0
      mounts:
        - cacheName: taskcluster-lib-artifact-go-checkout
          directory: gopath1.10.1\src
        - content:
            url: https://storage.googleapis.com/golang/go1.10.1.windows-amd64.zip
          directory: go1.10.1
          format: zip
        - content:
            url: https://github.com/git-for-windows/git/releases/download/v2.14.1.windows.1/MinGit-2.14.1-64-bit.zip
          directory: git
          format: zip
        - content:
            url: http://taskcluster/secrets/v1/secret/repo:github.com/taskcluster/taskcluster-lib-artifact-go
          file: secrets
        - content:
            url: https://github.com/stedolan/jq/releases/download/jq-1.5/jq-win64.exe
          file: jq.exe


  ##########################################################
  ################# macOS 10.13.4 Build ####################
  ##########################################################

  - provisionerId: pmoore-manual
    workerType: mac-os-x
    metadata:
      name: "Build/test 64 bit taskcluster-lib-artifact-go on macOS 10.13.4 (or later)"
      description: "This builds and tests taskcluster-lib-artifact-go on macOS 10.13.4 (or later)"
      owner: "{{ event.head.user.email }}" # the user who sent the pr/push e-mail will be inserted here
      source: "{{ event.head.repo.url }}"  # the repo where the pr came from will be inserted here
    extra:
      github:
        # Events that will trigger this task
        events:
          - pull_request.synchronize
          - push
    scopes:
      - secrets:get:repo:github.com/taskcluster/taskcluster-lib-artifact-go
      - generic-worker:cache:taskcluster-lib-artifact-go-checkout
    payload:
      features:
        taskclusterProxy: true
      maxRunTime: 3600
      command:
        - - /bin/bash
          - -vxec
          - |
            export CGO_ENABLED=0
            export GOROOT="$(pwd)/go1.10.1/go"
            export GOPATH="$(pwd)/gopath1.10.1"
            export PATH="${GOPATH}/bin:${GOROOT}/bin:${PATH}"
            go version
            go env
            cat secrets | jq -r .secret.sh > env.sh
            source env.sh
            mkdir -p "${GOPATH}/src/github.com/taskcluster"
            cd "${GOPATH}/src/github.com/taskcluster"
            if [ ! -d taskcluster-lib-artifact-go/.git ]; then rm -rf taskcluster-lib-artifact-go; git clone '{{ event.head.repo.url }}' 'taskcluster-lib-artifact-go'; fi
            cd 'taskcluster-lib-artifact-go'
            git fetch '{{ event.head.repo.url }}' "+{{ event.head.ref }}:refs/heads/${TASK_ID}"
            git checkout -f "${TASK_ID}"
            git reset --hard '{{ event.head.sha }}'
            git clean -fdx
            git checkout -B tmp -t "${TASK_ID}"
            go get -v -u github.com/gordonklaus/ineffassign
            go get -v -u -t ./...
            GORACE=history_size=7 CGO_ENABLED=1 go test -race -v ./...
            ineffassign .
            # Make sure we haven't forgotten something in the .gitignore file.
            # Output of wc command can contain spaces on darwin, so no quotes around expression.
            git status
            test $(git status --porcelain | wc -l) == 0
      mounts:
        - cacheName: taskcluster-lib-artifact-go-checkout
          directory: gopath1.10.1/src
        - content:
            url: https://storage.googleapis.com/golang/go1.10.1.darwin-amd64.tar.gz
          directory: go1.10.1
          format: tar.gz
        - content:
            url: http://localhost:8080/secrets/v1/secret/repo:github.com/taskcluster/taskcluster-lib-artifact-go
          file: secrets
        - content:
            url: https://github.com/stedolan/jq/releases/download/jq-1.5/jq-osx-amd64
          file: jq


  ##########################################################
  ################### Linux amd64 Build ####################
  ##########################################################

  - provisionerId: "{{ taskcluster.docker.provisionerId }}"
    workerType: "{{ taskcluster.docker.workerType }}"
    metadata:
      name: "Build/test 64 bit taskcluster-lib-artifact-go on Debian GNU/Linux 8 (jessie)"
      description: "This builds the 64 bit linux version of taskcluster-lib-artifact-go"
      owner: "{{ event.head.user.email }}" # the user who sent the pr/push e-mail will be inserted here
      source: "{{ event.head.repo.url }}"  # the repo where the pr came from will be inserted here
    extra:
      github:
        # Events that will trigger this task
        events:
          - pull_request.synchronize
          - push
    scopes:
      - secrets:get:repo:github.com/taskcluster/taskcluster-lib-artifact-go
      - docker-worker:cache:taskcluster-lib-artifact-go-checkout
    payload:
      features:
        taskclusterProxy: true
      maxRunTime: 3600
      image: golang
      command:
        - /bin/bash
        - -vxec
        - |
          export CGO_ENABLED=0
          go version
          go env
          curl -sL https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 > /usr/bin/jq
          chmod u+x /usr/bin/jq
          curl -sL http://taskcluster/secrets/v1/secret/repo:github.com/taskcluster/taskcluster-lib-artifact-go | /usr/bin/jq -r .secret.sh > env.sh
          source env.sh
          mkdir -p "${GOPATH}/src/github.com/taskcluster"
          cd "${GOPATH}/src/github.com/taskcluster"
          if [ ! -d taskcluster-lib-artifact-go/.git ]; then rm -rf taskcluster-lib-artifact-go; git clone '{{ event.head.repo.url }}' 'taskcluster-lib-artifact-go'; fi
          cd 'taskcluster-lib-artifact-go'
          git fetch '{{ event.head.repo.url }}' "+{{ event.head.ref }}:refs/heads/${TASK_ID}"
          git checkout -f "${TASK_ID}"
          git reset --hard '{{ event.head.sha }}'
          git clean -fdx
          git checkout -B tmp -t "${TASK_ID}"
          go get -v -u github.com/gordonklaus/ineffassign
          go get -v -u -t ./...
          GORACE=history_size=7 CGO_ENABLED=1 go test -v -race ./...
          "${GOPATH}/bin/ineffassign" .
          # Make sure we haven't forgotten something in the .gitignore file.
          git status
          test "$(git status --porcelain | wc -l)" == 0
      cache:
        taskcluster-lib-artifact-go-checkout: /go/src
